import java.nio.file.Files

buildscript {
	ext.kotlin_eap_repo = 'https://dl.bintray.com/kotlin/kotlin-eap-1.1'
	ext.kotlin_version = '1.1.0-beta-17'
	ext.gdxVersion = '1.9.5'
	
	repositories {
		mavenCentral()
		maven { url kotlin_eap_repo }
	}
	
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

plugins {
	id "us.kirchmeier.capsule" version "1.0.2"
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "application"

group "com.charlatano"
version "0.9.3"

mainClassName = "com.charlatano.Charlatano"

repositories {
	mavenCentral()
	maven { url kotlin_eap_repo }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
	compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: kotlin_version
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-script-util', version: kotlin_version
	
	compile group: "org.jire.arrowhead", name: "arrowhead", version: "1.2.3"
	compile group: "it.unimi.dsi", name: "fastutil", version: "7.0.13"
	
	compile "com.badlogicgames.gdx:gdx:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
	
	compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
	
	compile group: 'net.java.dev.jna', name: 'jna', version: '4.3.0'
	compile group: 'net.java.dev.jna', name: 'jna-platform', version: '4.3.0'
}

task mavenCapsule(type: MavenCapsule) {
	applicationClass mainClassName
	reallyExecutable
	capsuleManifest {
		allowSnapshots = true
		delegate.repositories = ["https://repo1.maven.org/maven2/",
		                         "https://dl.bintray.com/kotlin/kotlin-eap-1.1/"]
	}
}

task charlatano {
	doLast {
		def name = "Charlatano $version"
		
		def dir = file("build/$name/")
		if (dir.exists()) dir.list().each {
			file(new File(dir.getPath(), it)).delete()
		} else dir.mkdirs()
		
		def jarName = "${name}.jar"
		def jar = file(new File(dir, jarName))
		def capsule = file("build/libs/Charlatano-${version}-capsule.jar")
		Files.copy(capsule.toPath(), jar.toPath())
		
		def bat = file(new File(dir, "Start ${name}.bat"))
		Files.write(bat.toPath(), """@echo off
title $name
java -jar "$jarName"
pause""".getBytes())
	}
}

charlatano.dependsOn mavenCapsule
charlatano.mustRunAfter mavenCapsule

sourceSets {
	main.java.srcDirs += 'src/main/kotlin'
}